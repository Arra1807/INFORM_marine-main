tensor([[[[0.3202, 0.3202, 0.3202,  ..., 0.2600, 0.2600, 0.2600],
          [0.3202, 0.3202, 0.3202,  ..., 0.2600, 0.2600, 0.2600],
          [0.3202, 0.3202, 0.3202,  ..., 0.2600, 0.2600, 0.2600],
          ...,
          [0.3223, 0.3223, 0.3223,  ..., 0.2817, 0.2817, 0.2817],
          [0.3223, 0.3223, 0.3223,  ..., 0.2817, 0.2817, 0.2817],
          [0.3223, 0.3223, 0.3223,  ..., 0.2817, 0.2817, 0.2817]],

         [[0.3080, 0.3080, 0.3080,  ..., 0.3165, 0.3165, 0.3165],
          [0.3080, 0.3080, 0.3080,  ..., 0.3165, 0.3165, 0.3165],
          [0.3080, 0.3080, 0.3080,  ..., 0.3165, 0.3165, 0.3165],
          ...,
          [0.3403, 0.3403, 0.3403,  ..., 0.2809, 0.2809, 0.2809],
          [0.3403, 0.3403, 0.3403,  ..., 0.2809, 0.2809, 0.2809],
          [0.3403, 0.3403, 0.3403,  ..., 0.2809, 0.2809, 0.2809]],

         [[0.2138, 0.2138, 0.2138,  ..., 0.2071, 0.2071, 0.2071],
          [0.2138, 0.2138, 0.2138,  ..., 0.2071, 0.2071, 0.2071],
          [0.2138, 0.2138, 0.2138,  ..., 0.2071, 0.2071, 0.2071],
          ...,
          [0.3052, 0.3052, 0.3052,  ..., 0.2616, 0.2616, 0.2616],
          [0.3052, 0.3052, 0.3052,  ..., 0.2616, 0.2616, 0.2616],
          [0.3052, 0.3052, 0.3052,  ..., 0.2616, 0.2616, 0.2616]],

         [[0.2442, 0.2442, 0.2442,  ..., 0.2215, 0.2215, 0.2215],
          [0.2442, 0.2442, 0.2442,  ..., 0.2215, 0.2215, 0.2215],
          [0.2442, 0.2442, 0.2442,  ..., 0.2215, 0.2215, 0.2215],
          ...,
          [0.2633, 0.2633, 0.2633,  ..., 0.2744, 0.2744, 0.2744],
          [0.2633, 0.2633, 0.2633,  ..., 0.2744, 0.2744, 0.2744],
          [0.2633, 0.2633, 0.2633,  ..., 0.2744, 0.2744, 0.2744]],

         [[0.2592, 0.2592, 0.2592,  ..., 0.2581, 0.2581, 0.2581],
          [0.2592, 0.2592, 0.2592,  ..., 0.2581, 0.2581, 0.2581],
          [0.2592, 0.2592, 0.2592,  ..., 0.2581, 0.2581, 0.2581],
          ...,
          [0.1510, 0.1510, 0.1510,  ..., 0.1651, 0.1651, 0.1651],
          [0.1510, 0.1510, 0.1510,  ..., 0.1651, 0.1651, 0.1651],
          [0.1510, 0.1510, 0.1510,  ..., 0.1651, 0.1651, 0.1651]],

         [[0.3237, 0.3237, 0.3237,  ..., 0.3325, 0.3325, 0.3325],
          [0.3237, 0.3237, 0.3237,  ..., 0.3325, 0.3325, 0.3325],
          [0.3237, 0.3237, 0.3237,  ..., 0.3325, 0.3325, 0.3325],
          ...,
          [0.2634, 0.2634, 0.2634,  ..., 0.3332, 0.3332, 0.3332],
          [0.2634, 0.2634, 0.2634,  ..., 0.3332, 0.3332, 0.3332],
          [0.2634, 0.2634, 0.2634,  ..., 0.3332, 0.3332, 0.3332]]]])
tensor([[[[0.4469, 0.4469, 0.4469,  ..., 0.4061, 0.4061, 0.4061],
          [0.4469, 0.4469, 0.4469,  ..., 0.4061, 0.4061, 0.4061],
          [0.4469, 0.4469, 0.4469,  ..., 0.4061, 0.4061, 0.4061],
          ...,
          [0.2014, 0.2014, 0.2014,  ..., 0.2206, 0.2206, 0.2206],
          [0.2014, 0.2014, 0.2014,  ..., 0.2206, 0.2206, 0.2206],
          [0.2014, 0.2014, 0.2014,  ..., 0.2206, 0.2206, 0.2206]],

         [[0.2491, 0.2491, 0.2491,  ..., 0.3870, 0.3870, 0.3870],
          [0.2491, 0.2491, 0.2491,  ..., 0.3870, 0.3870, 0.3870],
          [0.2491, 0.2491, 0.2491,  ..., 0.3870, 0.3870, 0.3870],
          ...,
          [0.2898, 0.2898, 0.2898,  ..., 0.2095, 0.2095, 0.2095],
          [0.2898, 0.2898, 0.2898,  ..., 0.2095, 0.2095, 0.2095],
          [0.2898, 0.2898, 0.2898,  ..., 0.2095, 0.2095, 0.2095]],

         [[0.2642, 0.2642, 0.2642,  ..., 0.3004, 0.3004, 0.3004],
          [0.2642, 0.2642, 0.2642,  ..., 0.3004, 0.3004, 0.3004],
          [0.2642, 0.2642, 0.2642,  ..., 0.3004, 0.3004, 0.3004],
          ...,
          [0.2803, 0.2803, 0.2803,  ..., 0.2685, 0.2685, 0.2685],
          [0.2803, 0.2803, 0.2803,  ..., 0.2685, 0.2685, 0.2685],
          [0.2803, 0.2803, 0.2803,  ..., 0.2685, 0.2685, 0.2685]],

         [[0.0882, 0.0882, 0.0882,  ..., 0.3447, 0.3447, 0.3447],
          [0.0882, 0.0882, 0.0882,  ..., 0.3447, 0.3447, 0.3447],
          [0.0882, 0.0882, 0.0882,  ..., 0.3447, 0.3447, 0.3447],
          ...,
          [0.2232, 0.2232, 0.2232,  ..., 0.2320, 0.2320, 0.2320],
          [0.2232, 0.2232, 0.2232,  ..., 0.2320, 0.2320, 0.2320],
          [0.2232, 0.2232, 0.2232,  ..., 0.2320, 0.2320, 0.2320]],

         [[0.1721, 0.1721, 0.1721,  ..., 0.2909, 0.2909, 0.2909],
          [0.1721, 0.1721, 0.1721,  ..., 0.2909, 0.2909, 0.2909],
          [0.1721, 0.1721, 0.1721,  ..., 0.2909, 0.2909, 0.2909],
          ...,
          [0.1927, 0.1927, 0.1927,  ..., 0.1487, 0.1487, 0.1487],
          [0.1927, 0.1927, 0.1927,  ..., 0.1487, 0.1487, 0.1487],
          [0.1927, 0.1927, 0.1927,  ..., 0.1487, 0.1487, 0.1487]],

         [[0.3046, 0.3046, 0.3046,  ..., 0.0976, 0.0976, 0.0976],
          [0.3046, 0.3046, 0.3046,  ..., 0.0976, 0.0976, 0.0976],
          [0.3046, 0.3046, 0.3046,  ..., 0.0976, 0.0976, 0.0976],
          ...,
          [0.2519, 0.2519, 0.2519,  ..., 0.2251, 0.2251, 0.2251],
          [0.2519, 0.2519, 0.2519,  ..., 0.2251, 0.2251, 0.2251],
          [0.2519, 0.2519, 0.2519,  ..., 0.2251, 0.2251, 0.2251]]]])
tensor([[[[0.4064, 0.4064, 0.4064,  ..., 0.3662, 0.3662, 0.3662],
          [0.4064, 0.4064, 0.4064,  ..., 0.3662, 0.3662, 0.3662],
          [0.4064, 0.4064, 0.4064,  ..., 0.3662, 0.3662, 0.3662],
          ...,
          [0.3901, 0.3901, 0.3901,  ..., 0.3063, 0.3063, 0.3063],
          [0.3901, 0.3901, 0.3901,  ..., 0.3063, 0.3063, 0.3063],
          [0.3901, 0.3901, 0.3901,  ..., 0.3063, 0.3063, 0.3063]],

         [[0.3430, 0.3430, 0.3430,  ..., 0.3406, 0.3406, 0.3406],
          [0.3430, 0.3430, 0.3430,  ..., 0.3406, 0.3406, 0.3406],
          [0.3430, 0.3430, 0.3430,  ..., 0.3406, 0.3406, 0.3406],
          ...,
          [0.3454, 0.3454, 0.3454,  ..., 0.2229, 0.2229, 0.2229],
          [0.3454, 0.3454, 0.3454,  ..., 0.2229, 0.2229, 0.2229],
          [0.3454, 0.3454, 0.3454,  ..., 0.2229, 0.2229, 0.2229]],

         [[0.3971, 0.3971, 0.3971,  ..., 0.3667, 0.3667, 0.3667],
          [0.3971, 0.3971, 0.3971,  ..., 0.3667, 0.3667, 0.3667],
          [0.3971, 0.3971, 0.3971,  ..., 0.3667, 0.3667, 0.3667],
          ...,
          [0.2450, 0.2450, 0.2450,  ..., 0.2767, 0.2767, 0.2767],
          [0.2450, 0.2450, 0.2450,  ..., 0.2767, 0.2767, 0.2767],
          [0.2450, 0.2450, 0.2450,  ..., 0.2767, 0.2767, 0.2767]],

         [[0.2826, 0.2826, 0.2826,  ..., 0.2647, 0.2647, 0.2647],
          [0.2826, 0.2826, 0.2826,  ..., 0.2647, 0.2647, 0.2647],
          [0.2826, 0.2826, 0.2826,  ..., 0.2647, 0.2647, 0.2647],
          ...,
          [0.1764, 0.1764, 0.1764,  ..., 0.1860, 0.1860, 0.1860],
          [0.1764, 0.1764, 0.1764,  ..., 0.1860, 0.1860, 0.1860],
          [0.1764, 0.1764, 0.1764,  ..., 0.1860, 0.1860, 0.1860]],

         [[0.3575, 0.3575, 0.3575,  ..., 0.3232, 0.3232, 0.3232],
          [0.3575, 0.3575, 0.3575,  ..., 0.3232, 0.3232, 0.3232],
          [0.3575, 0.3575, 0.3575,  ..., 0.3232, 0.3232, 0.3232],
          ...,
          [0.1082, 0.1082, 0.1082,  ..., 0.2110, 0.2110, 0.2110],
          [0.1082, 0.1082, 0.1082,  ..., 0.2110, 0.2110, 0.2110],
          [0.1082, 0.1082, 0.1082,  ..., 0.2110, 0.2110, 0.2110]],

         [[0.3232, 0.3232, 0.3232,  ..., 0.3650, 0.3650, 0.3650],
          [0.3232, 0.3232, 0.3232,  ..., 0.3650, 0.3650, 0.3650],
          [0.3232, 0.3232, 0.3232,  ..., 0.3650, 0.3650, 0.3650],
          ...,
          [0.1639, 0.1639, 0.1639,  ..., 0.3429, 0.3429, 0.3429],
          [0.1639, 0.1639, 0.1639,  ..., 0.3429, 0.3429, 0.3429],
          [0.1639, 0.1639, 0.1639,  ..., 0.3429, 0.3429, 0.3429]]]])
[{"name": "Configuration", "type": "function", "fullType": "function"}, {"name": "DataLoader", "type": "type", "fullType": "type"}, {"name": "Loss_func", "type": "MSELoss", "fullType": "torch.nn.modules.loss.MSELoss"}, {"name": "SplitResizeEchogram", "type": "type", "fullType": "type"}, {"name": "TensorDataset", "type": "type", "fullType": "type"}, {"name": "X_test", "type": "ndarray", "fullType": "numpy.ndarray"}, {"name": "X_train", "type": "ndarray", "fullType": "numpy.ndarray"}, {"name": "batch", "type": "Tensor", "fullType": "torch.Tensor"}, {"name": "clip", "type": "function", "fullType": "function"}, {"name": "count_classes_in_echograms", "type": "function", "fullType": "function"}, {"name": "data_patch", "type": "ndarray", "fullType": "numpy.ndarray"}, {"name": "data_transform", "type": "list", "fullType": "list"}, {"name": "db", "type": "function", "fullType": "function"}, {"name": "e", "type": "Echogram", "fullType": "data.echosounder_data.load_data.echogram.Echogram"}, {"name": "echograms", "type": "list", "fullType": "list"}, {"name": "generate_patch_batches", "type": "function", "fullType": "function"}, {"name": "generator", "type": "generator", "fullType": "generator"}, {"name": "get_echograms", "type": "function", "fullType": "function"}, {"name": "label_patch", "type": "ndarray", "fullType": "numpy.ndarray"}, {"name": "mask_patch", "type": "ndarray", "fullType": "numpy.ndarray"}, {"name": "minimum_shape", "type": "int", "fullType": "int"}, {"name": "model", "type": "ResNetAutoEncoder", "fullType": "adaptation_method.Autoencoder.ResNetAutoEncoder"}, {"name": "nn", "type": "module", "fullType": "module"}, {"name": "np", "type": "module", "fullType": "module"}, {"name": "optim", "type": "module", "fullType": "module"}, {"name": "optimizer", "type": "Adam", "fullType": "torch.optim.adam.Adam"}, {"name": "plot_loss", "type": "function", "fullType": "function"}, {"name": "run", "type": "Run", "fullType": "wandb.sdk.wandb_run.Run"}, {"name": "splitter", "type": "SplitResizeEchogram", "fullType": "data.echosounder_data.preprocessing.resize_and_crop.SplitResizeEchogram"}, {"name": "standardize_min_max", "type": "function", "fullType": "function"}, {"name": "sys", "type": "module", "fullType": "module"}, {"name": "test_loader", "type": "DataLoader", "fullType": "torch.utils.data.dataloader.DataLoader"}, {"name": "train_loader", "type": "DataLoader", "fullType": "torch.utils.data.dataloader.DataLoader"}, {"name": "train_test_split", "type": "function", "fullType": "function"}, {"name": "train_val_encoder", "type": "function", "fullType": "function"}, {"name": "tuple_frequencies", "type": "tuple", "fullType": "tuple"}, {"name": "years", "type": "int", "fullType": "int"}]
{"shape": "(16, 6, 224, 224)", "count": 16, "type": "Tensor", "fullType": "torch.Tensor"}
{"shape": "(180, 6, 224, 224)", "count": 180, "type": "ndarray", "fullType": "numpy.ndarray"}
[34m[1mwandb[0m: [32m[41mERROR[0m The nbformat package was not found. It is required to save notebook history.
